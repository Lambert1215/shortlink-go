// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type CreateGroupRequest struct {
	Name     string `json:"name"`
	Username string `json:"username"`
}

type CreateGroupResponse struct {
	Gid      string `json:"gid"`
	Name     string `json:"name"`
	Username string `json:"username"`
	Success  bool   `json:"success"`
}

type DeleteGroupRequest struct {
	Gid      string `json:"gid"`
	Username string `json:"username"`
}

type DeleteGroupResponse struct {
	Success bool `json:"success"`
}

type DeleteUserRequest struct {
	Username string `json:"username"`
}

type DeleteUserResponse struct {
	Success bool `json:"success"`
}

type GetGroupRequest struct {
	Gid string `json:"gid"`
}

type GetGroupResponse struct {
	Gid      string `json:"gid"`
	Name     string `json:"name"`
	Username string `json:"username"`
}

type GetUserRequest struct {
	Username string `json:"username"`
}

type GetUserResponse struct {
	Username string `json:"username"`
	RealName string `json:"realName"`
	Phone    string `json:"phone"`
	Email    string `json:"email"`
}

type IsExistUserRequest struct {
	Username string `json:"username"`
}

type IsExistUserResponse struct {
	Success bool `json:"success"`
}

type IsUserLoginRequest struct {
	Token    string `json:"token"`
	Username string `json:"username"`
}

type IsUserLoginResponse struct {
	Success bool `json:"success"`
}

type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token string `json:"token"`
}

type LogoutRequest struct {
	Token    string `json:"token"`
	Username string `json:"username"`
}

type LogoutResponse struct {
	Success bool `json:"success"`
}

type RegisterRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
	RealName string `json:"realName"`
	Phone    string `json:"phone"`
	Email    string `json:"email"`
}

type RegisterResponse struct {
	Success bool `json:"success"`
}

type ShortLinkCreateRequest struct {
	OriginUrl string `json:"origin_url"`
	Gid       string `json:"gid"`
	Describe  string `json:"describe"`
}

type ShortLinkCreateResponse struct {
	Success   bool   `json:"success"`
	OriginUrl string `json:"origin_url"`
}

type ShortLinkDeleteRequest struct {
	ShortUri  string `json:"shortUri"`
	OriginUrl string `json:"origin_url"`
}

type ShortLinkDeleteResponse struct {
	Success bool `json:"success"`
}

type ShortLinkPageData struct {
	ShortUri     string `json:"short_uri"`
	FullShortUrl string `json:"full_short_url"`
	OriginUrl    string `json:"origin_url"`
	Gid          string `json:"gid"`
	EnableStatus int32  `json:"enable_status"`
	CreateTime   int64  `json:"create_time"`
	Describe     string `json:"describe"`
	Favicon      string `json:"favicon"`
	TotalPv      int32  `json:"total_pv"`
	TodayPv      int32  `json:"today_pv"`
	TotalUv      int32  `json:"total_uv"`
	TodayUv      int32  `json:"today_uv"`
	TotalUip     int32  `json:"total_uip"`
	TodayUip     int32  `json:"today_uip"`
}

type ShortLinkPageRequest struct {
	Gid      string `json:"gid"`
	Page     int64  `json:"page"`
	Size     int64  `json:"size"`
	OrderTag int64  `json:"orderTag"`
}

type ShortLinkPageResponse struct {
	List    []ShortLinkPageData `json:"list"`
	Page    int64               `json:"page"`
	MaxPage int64               `json:"maxPage"`
	Total   int64               `json:"total"`
}

type ShortLinkUpdateRequest struct {
	Gid       string `json:"gid"`
	OriginUrl string `json:"origin_url"`
	ShortUri  string `json:"short_uri"`
	Describe  string `json:"describe"`
	Favicon   string `json:"favicon"`
	ClickNum  int64  `json:"clickNum"`
	TotalPv   int64  `json:"totalPv"`
	TotalUv   int64  `json:"totalUv"`
	TotalUip  int64  `json:"totalUip"`
	TodayPv   int64  `json:"todayPv"`
	TodayUv   int64  `json:"todayUv"`
	TodayUip  int64  `json:"todayUip"`
}

type ShortLinkUpdateResponse struct {
	Success bool `json:"success"`
}

type UpdateGroupRequest struct {
	Gid      string `json:"gid"`
	Name     string `json:"name"`
	Username string `json:"username"`
}

type UpdateGroupResponse struct {
	Success bool `json:"success"`
}

type UpsertUserInfoRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
	RealName string `json:"realName"`
	Phone    string `json:"phone"`
	Email    string `json:"email"`
}

type UpsertUserInfoResponse struct {
	Success bool `json:"success"`
}
